version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: dsa-tracker-db
    environment:
      POSTGRES_DB: dsatracker
      POSTGRES_USER: dsauser
      POSTGRES_PASSWORD: dsapassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dsa-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsauser -d dsatracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dsa-tracker-backend
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/dsatracker
      - SPRING_DATASOURCE_USERNAME=dsauser
      - SPRING_DATASOURCE_PASSWORD=dsapassword
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - dsa-tracker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dsa-tracker-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - dsa-tracker-network

volumes:
  postgres_data:

networks:
  dsa-tracker-network:
    driver: bridge